# .github/workflows/tests.yml
# Runs tests on current branch or tag.
name: PHPUnit and Acceptance Tests

# Allow this workflow to be called from other workflows.
on: [workflow_call]

# Cancel previous runs of this workflow in the same branch if they're still in
# progress.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  phpunit:
    name: PHPUnit Coverage Tests
    runs-on: ubuntu-latest
    container:
      image: pookmish/drupal8ci:php8.3
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: 4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-
            4.0-${{ hashFiles('blt/blt.yml') }}-
      - name: Run Unit Tests
        # env:
        #   CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        run: |
          git config --system --add safe.directory '*' &&
          composer install -n &&
          blt tests:phpunit:coverage --no-interaction
      - name: Save Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit-tests-results
          path: $GITHUB_WORKSPACE/artifacts
  test_new_site:
    name: Test New Site
    strategy:
      fail-fast: false
      matrix:
        suite: [acceptance, functional]
    runs-on: ubuntu-latest
    env:
      DRUPAL_DATABASE_NAME: drupal
      DRUPAL_DATABASE_USERNAME: drupal
      DRUPAL_DATABASE_PASSWORD: drupal
      DRUPAL_DATABASE_HOST: mysql
    container:
      image: pookmish/drupal8ci:php8.3
      options: '--network-alias drupal8ci'
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        options: '--shm-size="2g"'
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: 4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-
            4.0-${{ hashFiles('blt/blt.yml') }}-
      - name: Install Site
        run: |
          git config --system --add safe.directory '*' &&
          rm -rf /var/www/html &&
          ln -snf $GITHUB_WORKSPACE /var/www/html &&
          apachectl stop &&
          apachectl start &&
          composer install -n &&
          blt drupal:install -n &&
          drush role:perm:add anonymous 'access content' &&
          drush xmlsitemap:rebuild &&
          mkdir -p artifacts/_data/
      - name: Run tests
        run: blt codeception --suite=${{ matrix.suite }}
      - name: Save Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newsite-${{ matrix.suite }}-tests
          path: artifacts
  test_sustainability_sync:
    name: Test Sustainability Site Sync
    runs-on: ubuntu-latest
    container:
      image: pookmish/drupal8ci:php8.3
      options: '--network-alias drupal8ci'
    env:
      DRUPAL_DATABASE_NAME: drupal
      DRUPAL_DATABASE_USERNAME: drupal
      DRUPAL_DATABASE_PASSWORD: drupal
      DRUPAL_DATABASE_HOST: mysql
      STANFORD_ENCRYPT: ${{secrets.STANFORD_ENCRYPT}}
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        options: '--shm-size="2g"'
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ACQUIA_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail
      - uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: 4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
            4.0-${{ hashFiles('blt/blt.yml') }}-${{ hashFiles('composer.json') }}-
            4.0-${{ hashFiles('blt/blt.yml') }}-
      - name: Sync Database
        run: |
          git config --system --add safe.directory '*' &&
          mysql -h mysql -P 3306 -u root -pdrupal -e 'SET GLOBAL max_allowed_packet=67108864;' &&
          rm -rf /var/www/html &&
          ln -snf $GITHUB_WORKSPACE /var/www/html &&
          composer install -n &&
          blt settings &&
          blt drupal:sync --site=sustainability -n
