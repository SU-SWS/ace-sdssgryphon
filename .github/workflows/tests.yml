# .github/workflows/tests.yml
# Runs tests on current branch or tag.
name: PHPUnit and Acceptance Tests

# Allow this workflow to be called from other workflows.
on: [workflow_call]

# Cancel previous runs of this workflow in the same branch if they're still in
# progress.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  phpunit:
    name: PHPUnit Coverage Tests
    runs-on: ubuntu-latest
    container:
      image: pookmish/drupal8ci:latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: 4.x-20240206-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            4.x-20240206-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
            4.x-20240206-${{ hashFiles('composer.json') }}-
            4.x-20240206-
      - name: Run Unit Tests
        # env:
        #   CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        run: |
          git config --system --add safe.directory '*'
          composer install -n
          blt blt:telemetry:disable --no-interaction
          blt tests:phpunit:coverage --no-interaction
      - name: Save Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit-tests-results
          path: $GITHUB_WORKSPACE/artifacts
  codeception:
    name: Codeception Test Suites
    strategy:
      matrix:
        suite: [acceptance, functional]
    runs-on: ubuntu-latest
    env:
      DRUPAL_DATABASE_NAME: drupal
      DRUPAL_DATABASE_USERNAME: drupal
      DRUPAL_DATABASE_PASSWORD: drupal
      DRUPAL_DATABASE_HOST: mysql
    container:
      image: pookmish/drupal8ci:latest
      options: '--network-alias drupal8ci'
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        options: '--shm-size="2g"'
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: 4.x-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            4.x-${{ hashFiles('composer.json') }}-${{ hashFiles('composer.lock') }}
            4.x-${{ hashFiles('composer.json') }}-
            4.x-
      - name: Install Site
        run: |
          git config --system --add safe.directory '*'
          rm -rf /var/www/html
          ln -snf $GITHUB_WORKSPACE /var/www/html
          apachectl stop
          apachectl start
          composer install -n
          blt drupal:install -n
          drush role:perm:add anonymous 'access content'
          drush xmlsitemap:rebuild
          mkdir -p artifacts/_data/
      - name: Run tests
        run: blt codeception --suite=${{ matrix.suite }}
      - name: Save Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.suite }}-tests-results
          path: artifacts
