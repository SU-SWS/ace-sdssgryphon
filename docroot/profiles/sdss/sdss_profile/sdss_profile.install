<?php

/**
 * @file
 * sdss_profile.install
 */

/**
 * Move unsectioned paragraphs on stanford_news nodes into one column
 * layout_paragraph sections.
 */
function sdss_profile_update_9000(&$sandbox) {
  $node_storage = \Drupal::entityTypeManager()
    ->getStorage('node');
  if (!isset($sandbox['count'])) {
    $nids = $node_storage->getQuery()
      ->accessCheck(FALSE)
      ->condition('type', 'stanford_news')
      ->sort('created')
      ->execute();
    $sandbox['nids'] = $nids;
    $sandbox['count'] = count($sandbox['nids']);
  }
  drupal_static_reset();
  $paragraph_storage = \Drupal::entityTypeManager()->getStorage('paragraph');

  $node_ids = array_splice($sandbox['nids'], 0, 25);

  /** @var \Drupal\node\NodeInterface[] $nodes */
  $nodes = $node_storage->loadMultiple($node_ids);
  foreach ($nodes as $node) {
    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $components */
    $components = $node->get('su_news_components');
    $unsectioned_paragraphs = [];

    if (!empty($components)) {
      $section_delta = '';

      /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $component */
      foreach ($components as $delta => $component) {
        /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
        $paragraph = $paragraph_storage->loadRevision($component->getValue()['target_revision_id']);
        $parent_uuid = $paragraph->getBehaviorSetting('layout_paragraphs', 'parent_uuid');

        if (
          $parent_uuid ||
          $paragraph->getParagraphType()->id() == 'stanford_layout'
        ) {
          continue;
        }

        $unsectioned_paragraphs[] = $paragraph;
        if(empty($section_delta)) {
          $section_delta = $delta;
        }
      }

      if ($unsectioned_paragraphs) {
        $section_paragraph = $paragraph_storage->create(['type' => 'stanford_layout']);
        $section_paragraph_layout_settings = [
            'layout' => 'layout_paragraphs_sdss_1_column',
            'parent_uuid' => NULL,
            'region' => NULL,
        ];
        $section_paragraph->setBehaviorSettings('layout_paragraphs', $section_paragraph_layout_settings);
        $section_paragraph->save();
        $parent_uuid = $section_paragraph->uuid();

        foreach ($unsectioned_paragraphs as $unsectioned_paragraph) {
          $unsectioned_paragraph_settings = [
              'region' => 'main',
              'parent_uuid' => $parent_uuid,
          ];
          $unsectioned_paragraph->setBehaviorSettings('layout_paragraphs', $unsectioned_paragraph_settings);
          $unsectioned_paragraph->save();
        }

        $components_list = $components->getValue();
        $section_paragraph_entity_reference = [
          'target_id' => $section_paragraph->id(),
          'target_revision_id' => $section_paragraph->getRevisionId(),
        ];
        array_splice($components_list, $section_delta, 0, ['entity' => $section_paragraph_entity_reference]);
        $node->set('su_news_components', $components_list)->save();
        $node->save();
      }
    }
  }

  // Support batching updates.
  $sandbox['#finished'] = empty($sandbox['nids']) ? 1 : ($sandbox['count'] - count($sandbox['nids'])) / $sandbox['count'];
}
